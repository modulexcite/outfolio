// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['models/notification'], function(Notification) {
    var Notifications;
    return Notifications = (function(_super) {

      __extends(Notifications, _super);

      function Notifications() {
        this.current = __bind(this.current, this);

        this.newLoader = __bind(this.newLoader, this);

        this["new"] = __bind(this["new"], this);
        return Notifications.__super__.constructor.apply(this, arguments);
      }

      Notifications.prototype.model = Notification;

      Notifications.prototype.error = false;

      Notifications.prototype["new"] = function(attributes) {
        var notification, timeout,
          _this = this;
        if (this.error) {
          return null;
        } else {
          notification = new Notification(attributes);
          this.add(notification, {
            at: 0
          });
          timeout = notification.get('timeout');
          if (timeout) {
            setTimeout(function() {
              return _this.remove(notification);
            }, timeout);
          }
          return notification;
        }
      };

      Notifications.prototype.newLoader = function() {
        return this["new"]({
          message: 'Loading',
          timeout: false
        });
      };

      Notifications.prototype.current = function() {
        return this.at(0);
      };

      return Notifications;

    })(Backbone.Collection);
  });

}).call(this);
