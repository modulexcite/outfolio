// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['app'], function(App) {
    var NotificationsView;
    return NotificationsView = (function(_super) {

      __extends(NotificationsView, _super);

      function NotificationsView() {
        this.error = __bind(this.error, this);

        this.render = __bind(this.render, this);
        return NotificationsView.__super__.constructor.apply(this, arguments);
      }

      NotificationsView.prototype.id = 'js-notifications';

      NotificationsView.prototype.template = jade.templates.notifications;

      NotificationsView.prototype.initialize = function() {
        console.debug('NotificationsView#initialize');
        this.collection = App.notifications;
        this.collection.on('add remove', this.render);
        return $('body').ajaxError(this.error);
      };

      NotificationsView.prototype.render = function() {
        var data, _ref;
        console.debug('NotificationsView#render');
        data = (_ref = this.collection.current()) != null ? _ref.toJSON() : void 0;
        this.$el.html(this.template({
          notification: data
        }));
        return this;
      };

      NotificationsView.prototype.error = function(e, xhr) {
        var message;
        if ((xhr != null ? xhr.status : void 0) === 404) {
          console.debug('NotificationsView#error 404 Not Found');
          return router.navigate('', {
            trigger: true
          });
        } else {
          console.debug('NotificationsView#error');
          message = "<strong>Oops!</strong> An error occured. It's not your fault, it's ours. Please try refreshing the page. <a href='" + window.location + "'>Refresh</a>";
          this.collection["new"]({
            message: message,
            timeout: false,
            type: 'notification-error'
          });
          return this.collection.error = true;
        }
      };

      return NotificationsView;

    })(Backbone.View);
  });

}).call(this);
